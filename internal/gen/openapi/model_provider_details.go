/*
 * Alexandria
 *
 * Alexandria
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ProviderDetails struct {
	Protocols []string `json:"protocols,omitempty"`

	Os string `json:"os,omitempty"`

	Arch string `json:"arch,omitempty"`

	Filename string `json:"filename,omitempty"`

	DownloadUrl string `json:"download_url,omitempty"`

	ShasumsUrl string `json:"shasums_url,omitempty"`

	ShasumsSignatureUrl string `json:"shasums_signature_url,omitempty"`

	Shasum string `json:"shasum,omitempty"`

	SigningKeys ProviderDetailsSigningKeys `json:"signing_keys,omitempty"`
}

// AssertProviderDetailsRequired checks if the required fields are not zero-ed
func AssertProviderDetailsRequired(obj ProviderDetails) error {
	if err := AssertProviderDetailsSigningKeysRequired(obj.SigningKeys); err != nil {
		return err
	}
	return nil
}

// AssertRecurseProviderDetailsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ProviderDetails (e.g. [][]ProviderDetails), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseProviderDetailsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aProviderDetails, ok := obj.(ProviderDetails)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertProviderDetailsRequired(aProviderDetails)
	})
}
