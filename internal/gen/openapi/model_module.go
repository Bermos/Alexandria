/*
 * Alexandria
 *
 * Alexandria
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Module struct {
	Path string `json:"path,omitempty"`

	Name string `json:"name,omitempty"`

	HasReadme bool `json:"has_readme,omitempty"`

	ModuleInfo ModuleModuleInfo `json:"module_info,omitempty"`
}

// AssertModuleRequired checks if the required fields are not zero-ed
func AssertModuleRequired(obj Module) error {
	if err := AssertModuleModuleInfoRequired(obj.ModuleInfo); err != nil {
		return err
	}
	return nil
}

// AssertRecurseModuleRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Module (e.g. [][]Module), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseModuleRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aModule, ok := obj.(Module)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertModuleRequired(aModule)
	})
}
